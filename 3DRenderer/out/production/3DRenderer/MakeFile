OUTPUT_NAME = main

SRC_DIR := .
OBJ_DIR := ../obj
OUTPUT_DIR := ../

CC := clang
CXX := clang++
JAVA := javac
ASM := nasm

LD_FLAGS := -O3
C_FLAGS := -O3
CXX_FLAGS := -O3 -Weverything
ASM_FLAGS := -f elf64

JAVA_FILES := $(wildcard $(SRC_DIR)/*.java)
JAVAOBJ_FILES := $(addprefix $(OBJ_DIR)/,$(notdir $(JAVA_FILES:.java=.class)))

CPP_FILES := $(wildcard $(SRC_DIR)/*.cpp)
CPPOBJ_FILES := $(addprefix $(OBJ_DIR)/,$(notdir $(CPP_FILES:.cpp=.o)))

C_FILES := $(wildcard $(SRC_DIR)/*.c)
COBJ_FILES := $(addprefix $(OBJ_DIR)/,$(notdir $(C_FILES:.c=.o)))

ASM_FILES := $(wildcard $(SRC_DIR)/*.asm)
ASMOBJ_FILES := $(addprefix $(OBJ_DIR)/,$(notdir $(ASM_FILES:.asm=.o)))

#-S -mllvm --x86-asm-syntax=intel
main: $(JAVAOBJ_FILES)


$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(C_FLAGS) -c $< -o $@

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.cpp
	$(CXX) $(CXX_FLAGS) -c $< -o $@

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.asm
	$(ASM) $(ASM_FLAGS) $< -o $@

$(OBJ_DIR)/%.class: $(SRC_DIR)/%.java
	$(JAVA) $< -d $(OBJ_DIR)


clean:
	rm -f $(OBJ_DIR)/*
	rm -f $(OUTPUT_DIR)/$(OUTPUT_NAME)